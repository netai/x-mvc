{
  "author": {
    "name": "Diogo Resende",
    "email": "dresende@thinkdigital.pt"
  },
  "name": "sql-ddl-sync",
  "description": "NodeJS SQL DDL Synchronization",
  "keywords": [
    "sql",
    "ddl",
    "sync",
    "mysql",
    "postgres",
    "sqlite"
  ],
  "version": "0.3.10",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "http://github.com/dresende/node-sql-ddl-sync.git"
  },
  "main": "./lib/Sync",
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": "*"
  },
  "analyse": false,
  "dependencies": {
    "lodash": "2.4.1"
  },
  "devDependencies": {
    "mocha": "1.14.0",
    "should": "2.0.2",
    "commander": "~2.0.0",
    "orm": "2.1.6"
  },
  "readme": "## NodeJS SQL DDL Synchronization\n\n[![Build Status](https://secure.travis-ci.org/dresende/node-sql-ddl-sync.png?branch=master)](http://travis-ci.org/dresende/node-sql-ddl-sync)\n[![](https://badge.fury.io/js/sql-ddl-sync.png)](https://npmjs.org/package/sql-ddl-sync)\n[![](https://gemnasium.com/dresende/node-sql-ddl-sync.png)](https://gemnasium.com/dresende/node-sql-ddl-sync)\n\n## Install\n\n```sh\nnpm install sql-ddl-sync\n```\n\n## Dialects\n\n- MySQL\n- PostgreSQL\n\n## About\n\nThis module is part of [ORM](http://dresende.github.com/node-orm2). It's used synchronize model tables in supported dialects.\nSorry there is no API documentation for now but there are a couple of tests you can read and find out how to use it if you want.\n\n## Example\n\nInstall `orm` & the required driver (eg: `mysql`).\nCreate a file with the contents below and change insert your database credentials.\nRun once and you'll see table `ddl_sync_test` appear in your database. Then make some changes to it (add/drop/change columns)\nand run the code again. Your table should always return to the same structure.\n\n```js\nvar orm    = require(\"orm\");\nvar mysql  = require(\"mysql\");\nvar Sync   = require(\"sql-ddl-sync\").Sync;\n\norm.connect(\"mysql://username:password@localhost/database\", function (err, db) {\n\tif (err) throw err;\n\tvar driver = db.driver;\n\n\tvar sync = new Sync({\n\t\tdialect : \"mysql\",\n\t\tdriver  : driver,\n\t\tdebug   : function (text) {\n\t\t\tconsole.log(\"> %s\", text);\n\t\t}\n\t});\n\n\tsync.defineCollection(\"ddl_sync_test\", {\n    id     : { type: \"serial\", key: true, serial: true },\n    name   : { type: \"text\", required: true },\n    age    : { type: \"integer\" },\n    male   : { type: \"boolean\" },\n    born   : { type: \"date\", time: true },\n    born2  : { type: \"date\" },\n    int2   : { type: \"integer\", size: 2 },\n    int4   : { type: \"integer\", size: 4 },\n    int8   : { type: \"integer\", size: 8 },\n    float4 : { type: \"number\",  size: 4 },\n    float8 : { type: \"number\",  size: 8 },\n    photo  : { type: \"binary\" }\n  });\n\n\tsync.sync(function (err) {\n\t\tif (err) {\n\t\t\tconsole.log(\"> Sync Error\");\n\t\t\tconsole.log(err);\n\t\t} else {\n\t\t\tconsole.log(\"> Sync Done\");\n\t\t}\n\t\tprocess.exit(0);\n\t});\n});\n\n```\n\n## Test\n\nTo test, first make sure you have development dependencies installed. Go to the root folder and do:\n\n```sh\nnpm install\n```\n\nThen, just run the tests.\n\n```sh\nnpm test\n```\n\nIf you have a supported database server and want to test against it, first install the module:\n\n```sh\n# if you have a mysql server\nnpm install mysql\n# if you have a postgresql server\nnpm install pg\n```\n\nAnd then run:\n\n```sh\nnode test/run-db --uri 'mysql://username:password@localhost/database'\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dresende/node-sql-ddl-sync/issues"
  },
  "homepage": "https://github.com/dresende/node-sql-ddl-sync",
  "_id": "sql-ddl-sync@0.3.10",
  "_shasum": "f3c42f802d4d3fe8c01819e1d3f4db473ec88a6a",
  "_resolved": "git+https://github.com/dresende/node-sql-ddl-sync.git#f879dd8103a0e961aa3be5cff3410a3e66243d72",
  "_from": "sql-ddl-sync@git+https://github.com/dresende/node-sql-ddl-sync.git#v0.3.10"
}
